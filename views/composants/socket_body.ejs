<h2>Clavardage</h2>
<section id="enregistrement">
    <p>Veuillez vous enregistrer pour utiliser le chat</p>
    <input type="text">
    <button onclick="enregistrement()">Enregistrement</button>
</section>

<section id="chat" style="display:none">
    <table id="list_user"></table>
    <table id="message">
        <th>Utilisateur</th>
        <th>Message</th>
    </table>
    <section id="message_a_transmettre">
        <input type="text" name="txtMessage">
        <button onclick="transmettre()">Transmettre</button>
    </section>
</section>
<script type="text/javascript">
 /* 
Pour établir une communication socket il faut un premier appel de
 la fonction io()
 Cette fonction est incluse dans la librairie socket.io. 
 Cette fonction déclenche un événement connect vers le serveur
 */
let socket;
window.onload = ()=>{
    socket = io();
    console.log(socket.id);

    socket.on('connect', function(){
        console.log('Le socket id = ' + socket.id); 
        /* l'événement ackUser a été transmis par le serveur */ 
    });
    socket.on('valide_user', function(data){
        console.log('data en provenance du serveur = ' + data.user)
        let elmEnregistrement = document.getElementById('enregistrement');
        elmEnregistrement.style.display = 'none';
        let elmChat = document.getElementById('chat');
        elmChat.style.display = 'flex';
    })
    socket.on('diffuser_list_user', function(data){
        afficher_table_users(data);
    });
    socket.on('diffuser_message', function(data){
        afficher_mon_message(data.user, data.message, 'rgb(236, 236, 236)');
    });
    socket.on('valide_message', function(data){
        afficher_mon_message(data.user, data.message, 'rgb(167, 211, 255)');
    });
 }
 
/**
 * Transmet le message entré dans le champs de texte approprié
*/
function transmettre(){
    console.log("J'envoie un message");
    let msg = document.getElementsByName('txtMessage')[0].value;
    socket.emit('setMessage', {message: msg});
}

/**
 * Enregistre l'utilisateur entré dans le champs de texte approprié
*/
function enregistrement(){
    var elmUser = document.querySelector('#enregistrement input');
    console.log(elmUser.value);
    /* l'événement « setUser » est transmit avec un objet */
    socket.emit('setUser', {user : elmUser.value});
 }

/**
 * Affiche les utilisateurs dans le tableau list_user
 * @param {obj} data - Les utilisateurs du chat
*/
 function afficher_table_users(data) {
    let sChaine = '';
    // Pour chaque utilisateur (id), on l'affiche dans une rangée
    for(id in data) {
        sChaine += '­<tr>'
            + '<td>' + id + '</td>'
            + '<td>' + data[id] + '</td>'
            + '</tr>'
    }
    let elmListUser = document.getElementById('list_user');
    elmListUser.innerHTML = sChaine;
 }

/**
 * Affiche le message envoyé dans le tableau chat
 * @param {string} user - Nom de l'utilisateur qui envoie le message
 * @param {string} msg - Message envoyé
 * @param {string} couleur - Couleur selon le destinateur
*/
 function afficher_mon_message(user, msg, couleur){
    let sChaine = '';
    let elmChat = document.getElementById('message');
    let objRow = document.createElement('tr');
    objRow.style.backgroundColor = couleur;
    sChaine += '<td>' + user + '</td>'
        + '<td>' + msg + '</td>'
    elmChat.appendChild(objRow);
    objRow.innerHTML += sChaine;
 }

</script>